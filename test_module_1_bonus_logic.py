#!/usr/bin/env python3
"""
üéØ –¢–ï–°–¢ –õ–û–ì–ò–ö–ò 10% –ë–û–ù–£–°–û–í –ü–û –°–î–ê–ß–ï 1 –ú–û–î–£–õ–Ø
–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ –ø–æ–ª—É—á–∞—é—Ç –±–æ–Ω—É—Å—ã —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç —Å–¥–∞–ª 1 –º–æ–¥—É–ª—å –ø–æ –∏—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é
"""

from datetime import date, datetime, timedelta
from decimal import Decimal

class MockStudent:
    def __init__(self, id, fio, telegram, training_type, start_date, total_cost=100000):
        self.id = id
        self.fio = fio
        self.telegram = telegram
        self.training_type = training_type
        self.start_date = start_date
        self.total_cost = total_cost

class MockPayment:
    def __init__(self, student_id, mentor_id, amount, payment_date):
        self.student_id = student_id
        self.mentor_id = mentor_id
        self.amount = Decimal(str(amount))
        self.payment_date = payment_date

class MockTopicAssignment:
    def __init__(self, student_id, mentor_id, topic_manual=None, topic_auto=None):
        self.student_id = student_id
        self.mentor_id = mentor_id
        self.topic_manual = topic_manual
        self.topic_auto = topic_auto
        self.assigned_at = datetime.now()

class MockMentor:
    def __init__(self, id, full_name):
        self.id = id
        self.full_name = full_name

def test_module_1_bonus_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É 10% –±–æ–Ω—É—Å–æ–≤ –ø–æ —Å–¥–∞—á–µ 1 –º–æ–¥—É–ª—è"""
    print("üéØ –¢–ï–°–¢ –õ–û–ì–ò–ö–ò 10% –ë–û–ù–£–°–û–í –ü–û –°–î–ê–ß–ï 1 –ú–û–î–£–õ–Ø")
    print("=" * 70)
    
    # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –¥–∞—Ç–∞ - 1 —Å–µ–Ω—Ç—è–±—Ä—è 2025 (–∫–∞–∫ –≤ –∫–æ–¥–µ)
    september_start = date(2025, 9, 1)
    print(f"üìÖ –£—á–∏—Ç—ã–≤–∞—é—Ç—Å—è —Å—Ç—É–¥–µ–Ω—Ç—ã —Å: {september_start}")
    
    print("\nüéØ –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê:")
    print("   ‚úÖ –†—É—á–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä (ID=1): –±–æ–Ω—É—Å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç —Å–¥–∞–ª '—Ä—É—á–Ω–æ–π 1 –º–æ–¥—É–ª—å'")
    print("   ‚úÖ –ê–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä (ID=3): –±–æ–Ω—É—Å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç —Å–¥–∞–ª '–∞–≤—Ç–æ 1 –º–æ–¥—É–ª—å' (–°–¥–∞—á–∞ 2 –º–æ–¥—É–ª—è)")
    print("   ‚ùå –ï—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç –Ω–µ —Å–¥–∞–ª 1 –º–æ–¥—É–ª—å –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é ‚Üí –¥–∏—Ä–µ–∫—Ç–æ—Ä –ù–ï –ø–æ–ª—É—á–∞–µ—Ç –±–æ–Ω—É—Å")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    test_students = [
        MockStudent(1, "–°—Ç—É–¥–µ–Ω—Ç –¢–æ–ª—å–∫–æ –†—É—á–Ω–æ–π", "@manual_only", "–§—É–ª–ª—Å—Ç–µ–∫", date(2025, 10, 1)),
        MockStudent(2, "–°—Ç—É–¥–µ–Ω—Ç –¢–æ–ª—å–∫–æ –ê–≤—Ç–æ", "@auto_only", "–§—É–ª–ª—Å—Ç–µ–∫", date(2025, 10, 1)),
        MockStudent(3, "–°—Ç—É–¥–µ–Ω—Ç –û–±–∞ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "@both", "–§—É–ª–ª—Å—Ç–µ–∫", date(2025, 10, 1)),
        MockStudent(4, "–°—Ç—É–¥–µ–Ω—Ç –ë–µ–∑ –ú–æ–¥—É–ª–µ–π", "@none", "–§—É–ª–ª—Å—Ç–µ–∫", date(2025, 10, 1)),
        MockStudent(5, "–°—Ç—É–¥–µ–Ω—Ç –ü–µ—Ä–µ–∫–ª—é—á–∏–ª—Å—è", "@switched", "–§—É–ª–ª—Å—Ç–µ–∫", date(2025, 10, 1)),
    ]
    
    # –°–æ–∑–¥–∞–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ç–µ–º (–∫—Ç–æ —á—Ç–æ —Å–¥–∞–ª)
    test_assignments = [
        # –°—Ç—É–¥–µ–Ω—Ç 1: —Ç–æ–ª—å–∫–æ —Ä—É—á–Ω–æ–π 1 –º–æ–¥—É–ª—å
        MockTopicAssignment(1, 2, topic_manual="1 –º–æ–¥—É–ª—å"),
        
        # –°—Ç—É–¥–µ–Ω—Ç 2: —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ 1 –º–æ–¥—É–ª—å
        MockTopicAssignment(2, 2, topic_auto="–°–¥–∞—á–∞ 2 –º–æ–¥—É–ª—è"),
        
        # –°—Ç—É–¥–µ–Ω—Ç 3: –æ–±–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        MockTopicAssignment(3, 2, topic_manual="1 –º–æ–¥—É–ª—å"),
        MockTopicAssignment(3, 2, topic_auto="–°–¥–∞—á–∞ 2 –º–æ–¥—É–ª—è"),
        
        # –°—Ç—É–¥–µ–Ω—Ç 4: –Ω–∏–∫–∞–∫–∏—Ö –º–æ–¥—É–ª–µ–π –Ω–µ —Å–¥–∞–ª
        
        # –°—Ç—É–¥–µ–Ω—Ç 5: —Å–Ω–∞—á–∞–ª–∞ —Å–¥–∞–ª —Ä—É—á–Ω–æ–π, –ø–æ—Ç–æ–º –∞–≤—Ç–æ (—Å—Ü–µ–Ω–∞—Ä–∏–π –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è)
        MockTopicAssignment(5, 2, topic_manual="1 –º–æ–¥—É–ª—å"),  # –ú–µ—Å—è—Ü –Ω–∞–∑–∞–¥
        MockTopicAssignment(5, 2, topic_auto="–°–¥–∞—á–∞ 2 –º–æ–¥—É–ª—è"),  # –ù–µ–¥–∞–≤–Ω–æ
    ]
    
    # –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂–∏ –æ—Ç –∫—É—Ä–∞—Ç–æ—Ä–æ–≤ (ID=2)
    test_payments = []
    for student in test_students:
        test_payments.append(MockPayment(
            student_id=student.id,
            mentor_id=2,  # –ö—É—Ä–∞—Ç–æ—Ä
            amount=50000,
            payment_date=date.today()
        ))
    
    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω—Ç–æ—Ä–∞
    curator = MockMentor(2, "–ö—É—Ä–∞—Ç–æ—Ä –¢–µ—Å—Ç–æ–≤—ã–π")
    
    print(f"\nüë• –¢–ï–°–¢–û–í–´–ï –°–¶–ï–ù–ê–†–ò–ò:")
    print("-" * 50)
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    director_salaries = {1: 0, 3: 0}
    detailed_logs = {1: [], 3: []}
    
    for payment in test_payments:
        student = next((s for s in test_students if s.id == payment.student_id), None)
        if not student:
            continue
        
        print(f"\nüîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞: {student.fio}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–¥–∞—á—É –º–æ–¥—É–ª–µ–π
        has_manual_module_1 = any(
            a.student_id == student.id and a.topic_manual == "1 –º–æ–¥—É–ª—å" 
            for a in test_assignments
        )
        has_auto_module_1 = any(
            a.student_id == student.id and a.topic_auto == "–°–¥–∞—á–∞ 2 –º–æ–¥—É–ª—è" 
            for a in test_assignments
        )
        
        print(f"   üìö –°–¥–∞–ª —Ä—É—á–Ω–æ–π 1 –º–æ–¥—É–ª—å: {'‚úÖ –î–ê' if has_manual_module_1 else '‚ùå –ù–ï–¢'}")
        print(f"   ü§ñ –°–¥–∞–ª –∞–≤—Ç–æ 1 –º–æ–¥—É–ª—å: {'‚úÖ –î–ê' if has_auto_module_1 else '‚ùå –ù–ï–¢'}")
        
        # –õ–æ–≥–∏–∫–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –±–æ–Ω—É—Å–æ–≤
        bonus = float(payment.amount) * 0.1
        bonuses_applied = []
        
        # –ë–æ–Ω—É—Å —Ä—É—á–Ω–æ–º—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—É
        if has_manual_module_1:
            director_salaries[1] += bonus
            detailed_logs[1].append(f"–ë–æ–Ω—É—Å –∑–∞ {student.fio}: +{bonus:.0f} —Ä—É–±.")
            bonuses_applied.append("—Ä—É—á–Ω–æ–π")
            print(f"   ‚úÖ –†—É—á–Ω–æ–º—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—É: +{bonus:.0f} —Ä—É–±.")
        else:
            print(f"   ‚ùå –†—É—á–Ω–æ–º—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—É: 0 —Ä—É–±. (–Ω–µ —Å–¥–∞–ª —Ä—É—á–Ω–æ–π 1 –º–æ–¥—É–ª—å)")
        
        # –ë–æ–Ω—É—Å –∞–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—É
        if has_auto_module_1:
            director_salaries[3] += bonus
            detailed_logs[3].append(f"–ë–æ–Ω—É—Å –∑–∞ {student.fio}: +{bonus:.0f} —Ä—É–±.")
            bonuses_applied.append("–∞–≤—Ç–æ")
            print(f"   ‚úÖ –ê–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—É: +{bonus:.0f} —Ä—É–±.")
        else:
            print(f"   ‚ùå –ê–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—É: 0 —Ä—É–±. (–Ω–µ —Å–¥–∞–ª –∞–≤—Ç–æ 1 –º–æ–¥—É–ª—å)")
        
        print(f"   üí∞ –ü–ª–∞—Ç–µ–∂ {payment.amount} —Ä—É–±. ‚Üí –±–æ–Ω—É—Å—ã: {', '.join(bonuses_applied) if bonuses_applied else '–ù–ï–¢'}")
    
    # –ü–æ–¥–≤–æ–¥–∏–º –∏—Ç–æ–≥–∏
    print(f"\nüìä –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print("-" * 50)
    print(f"üí∞ –†—É—á–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä (ID=1): {director_salaries[1]:.0f} —Ä—É–±.")
    print(f"üí∞ –ê–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä (ID=3): {director_salaries[3]:.0f} —Ä—É–±.")
    print(f"üí∞ –û–±—â–∞—è —Å—É–º–º–∞ –±–æ–Ω—É—Å–æ–≤: {director_salaries[1] + director_salaries[3]:.0f} —Ä—É–±.")
    
    print(f"\nüìã –î–ï–¢–ê–õ–ò–ó–ê–¶–ò–Ø:")
    print(f"   –†—É—á–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä:")
    for log in detailed_logs[1]:
        print(f"      ‚Ä¢ {log}")
    if not detailed_logs[1]:
        print(f"      ‚Ä¢ –ù–µ—Ç –±–æ–Ω—É—Å–æ–≤")
    
    print(f"   –ê–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä:")
    for log in detailed_logs[3]:
        print(f"      ‚Ä¢ {log}")
    if not detailed_logs[3]:
        print(f"      ‚Ä¢ –ù–µ—Ç –±–æ–Ω—É—Å–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print(f"\nüß™ –ü–†–û–í–ï–†–ö–ê –û–ñ–ò–î–ê–ï–ú–´–• –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:")
    print("-" * 50)
    
    # –û–∂–∏–¥–∞–µ–º—ã–µ –±–æ–Ω—É—Å—ã:
    # –°—Ç—É–¥–µ–Ω—Ç 1 (—Ç–æ–ª—å–∫–æ —Ä—É—á–Ω–æ–π): —Ä—É—á–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä +5000
    # –°—Ç—É–¥–µ–Ω—Ç 2 (—Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ): –∞–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä +5000  
    # –°—Ç—É–¥–µ–Ω—Ç 3 (–æ–±–∞): –æ–±–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ +5000 –∫–∞–∂–¥—ã–π
    # –°—Ç—É–¥–µ–Ω—Ç 4 (–Ω–∏–∫—Ç–æ): –Ω–∏–∫–æ–º—É –Ω–∏—á–µ–≥–æ
    # –°—Ç—É–¥–µ–Ω—Ç 5 (–æ–±–∞): –æ–±–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ +5000 –∫–∞–∂–¥—ã–π
    
    expected_manual = 5000 * 3  # –°—Ç—É–¥–µ–Ω—Ç—ã 1, 3, 5
    expected_auto = 5000 * 3    # –°—Ç—É–¥–µ–Ω—Ç—ã 2, 3, 5
    
    manual_correct = director_salaries[1] == expected_manual
    auto_correct = director_salaries[3] == expected_auto
    
    print(f"‚úÖ –†—É—á–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä: –æ–∂–∏–¥–∞–ª–æ—Å—å {expected_manual:.0f}, –ø–æ–ª—É—á–µ–Ω–æ {director_salaries[1]:.0f} {'‚úÖ' if manual_correct else '‚ùå'}")
    print(f"‚úÖ –ê–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä: –æ–∂–∏–¥–∞–ª–æ—Å—å {expected_auto:.0f}, –ø–æ–ª—É—á–µ–Ω–æ {director_salaries[3]:.0f} {'‚úÖ' if auto_correct else '‚ùå'}")
    
    success = manual_correct and auto_correct
    
    print(f"\n" + "=" * 70)
    if success:
        print("üéâ –¢–ï–°–¢ –õ–û–ì–ò–ö–ò 10% –ë–û–ù–£–°–û–í –ü–û –°–î–ê–ß–ï 1 –ú–û–î–£–õ–Ø –ü–†–û–ô–î–ï–ù!")
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –Ω–∞—á–∏—Å–ª—è–µ—Ç –±–æ–Ω—É—Å—ã —Ç–æ–ª—å–∫–æ –∑–∞ —Å–¥–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏")
        print("üéØ –õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    else:
        print("üí• –¢–ï–°–¢ –õ–û–ì–ò–ö–ò 10% –ë–û–ù–£–°–û–í –ü–û –°–î–ê–ß–ï 1 –ú–û–î–£–õ–Ø –ü–†–û–í–ê–õ–ï–ù!")
        print("‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—á–∏—Å–ª—è–µ—Ç –±–æ–Ω—É—Å—ã")
        print("üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ–≥–∏–∫–∏")
    
    print(f"\nüîç –ö–õ–Æ–ß–ï–í–´–ï –û–°–û–ë–ï–ù–ù–û–°–¢–ò –ù–û–í–û–ô –õ–û–ì–ò–ö–ò:")
    print(f"   üéØ –£—Å–ª–æ–≤–∏–µ: —Å—Ç—É–¥–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω —Å–¥–∞—Ç—å 1 –º–æ–¥—É–ª—å –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é")
    print(f"   üìö –†—É—á–Ω–æ–π 1 –º–æ–¥—É–ª—å: 'topic_manual = \"1 –º–æ–¥—É–ª—å\"'")
    print(f"   ü§ñ –ê–≤—Ç–æ 1 –º–æ–¥—É–ª—å: 'topic_auto = \"–°–¥–∞—á–∞ 2 –º–æ–¥—É–ª—è\"'")
    print(f"   üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ: —Å—Ç—É–¥–µ–Ω—Ç –º–æ–∂–µ—Ç —Å–¥–∞—Ç—å –æ–±–∞ ‚Üí –ø–æ–ª—É—á–∞—é—Ç –æ–±–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞")
    print(f"   ‚è∞ –í—Ä–µ–º—è —Å–¥–∞—á–∏: –Ω–µ –≤–∞–∂–Ω–æ, –≥–ª–∞–≤–Ω–æ–µ —á—Ç–æ —Å–¥–∞–ª")
    print(f"   üí∞ –†–∞–∑–º–µ—Ä –±–æ–Ω—É—Å–∞: 10% –æ—Ç —Å—É–º–º—ã –ø–ª–∞—Ç–µ–∂–∞")
    
    return success

if __name__ == "__main__":
    print("üéØüéØüéØ –¢–ï–°–¢ –õ–û–ì–ò–ö–ò 10% –ë–û–ù–£–°–û–í –ü–û –°–î–ê–ß–ï 1 –ú–û–î–£–õ–Ø üéØüéØüéØ")
    print("–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É: –±–æ–Ω—É—Å —Ç–æ–ª—å–∫–æ –∑–∞ —Å–¥–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏!")
    print()
    
    success = test_module_1_bonus_logic()
    
    print("\n" + "üéØ" * 70)
    if success:
        print("üèÜ –õ–û–ì–ò–ö–ê 10% –ë–û–ù–£–°–û–í –†–ê–ë–û–¢–ê–ï–¢ –ò–î–ï–ê–õ–¨–ù–û! üèÜ")
        print("üìö –°–ò–°–¢–ï–ú–ê –ü–†–ê–í–ò–õ–¨–ù–û –£–ß–ò–¢–´–í–ê–ï–¢ –°–î–ê–ß–£ –ú–û–î–£–õ–ï–ô! üìö")
    else:
        print("‚ö†Ô∏è –õ–û–ì–ò–ö–ê –¢–†–ï–ë–£–ï–¢ –î–û–†–ê–ë–û–¢–ö–ò! ‚ö†Ô∏è")
        print("üîß –ü–†–û–í–ï–†–¨–¢–ï –ö–û–î –ù–ê–ß–ò–°–õ–ï–ù–ò–Ø –ë–û–ù–£–°–û–í! üîß")
    
    exit(0 if success else 1)
