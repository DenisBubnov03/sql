from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker, declarative_base
import logging

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è SQLAlchemy
logging.getLogger('sqlalchemy').setLevel(logging.ERROR)

# URL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL = "postgresql://denisbubnov:denbub0311@localhost/test1"

# –°–æ–∑–¥–∞–µ–º –¥–≤–∏–∂–æ–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
engine = create_engine(DATABASE_URL, echo=True)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü
Base = declarative_base()

# –°–µ—Å—Å–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
Session = sessionmaker(bind=engine)

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Å–µ—Å—Å–∏—è
session = Session()


def get_session():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    return Session()


def debug_fullstack_data():
    """–û—Ç–ª–∞–¥–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ñ—É–ª–ª—Å—Ç–µ–∫–æ–≤"""
    from data_base.models import Student, FullstackTopicAssign
    from commands.logger import custom_logger

    logger = custom_logger

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–ª–ª—Å—Ç–µ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
        fullstack_students = session.query(Student).filter(Student.training_type == "–§—É–ª–ª—Å—Ç–µ–∫").all()
        logger.info(f"üîç DEBUG: –í—Å–µ–≥–æ —Ñ—É–ª–ª—Å—Ç–µ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: {len(fullstack_students)}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ –ø—Ä–∏–Ω—è—Ç—ã—Ö —Ç–µ–º
        all_topics = session.query(FullstackTopicAssign).all()
        logger.info(f"üîç DEBUG: –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –ø—Ä–∏–Ω—è—Ç—ã—Ö —Ç–µ–º: {len(all_topics)}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä—É—á–Ω—ã–µ —Ç–µ–º—ã
        manual_topics = session.query(FullstackTopicAssign).filter(
            FullstackTopicAssign.topic_manual.isnot(None)
        ).all()
        logger.info(f"üîç DEBUG: –í—Å–µ–≥–æ —Ä—É—á–Ω—ã—Ö —Ç–µ–º: {len(manual_topics)}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ —Ç–µ–º—ã
        auto_topics = session.query(FullstackTopicAssign).filter(
            FullstackTopicAssign.topic_auto.isnot(None)
        ).all()
        logger.info(f"üîç DEBUG: –í—Å–µ–≥–æ –∞–≤—Ç–æ —Ç–µ–º: {len(auto_topics)}")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö
        if manual_topics:
            logger.info("üîç DEBUG: –ü—Ä–∏–º–µ—Ä—ã —Ä—É—á–Ω—ã—Ö —Ç–µ–º:")
            for topic in manual_topics[:5]:  # –ü–µ—Ä–≤—ã–µ 5
                logger.info(f"  ‚Ä¢ –°—Ç—É–¥–µ–Ω—Ç {topic.student_id}, –ú–µ–Ω—Ç–æ—Ä {topic.mentor_id}: {topic.topic_manual}")

        if auto_topics:
            logger.info("üîç DEBUG: –ü—Ä–∏–º–µ—Ä—ã –∞–≤—Ç–æ —Ç–µ–º:")
            for topic in auto_topics[:5]:  # –ü–µ—Ä–≤—ã–µ 5
                logger.info(f"  ‚Ä¢ –°—Ç—É–¥–µ–Ω—Ç {topic.student_id}, –ú–µ–Ω—Ç–æ—Ä {topic.mentor_id}: {topic.topic_auto}")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ª–∞–¥–∫–µ –¥–∞–Ω–Ω—ã—Ö —Ñ—É–ª–ª—Å—Ç–µ–∫–æ–≤: {e}")