from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler, MessageHandler, filters
from data_base.db import session
from data_base.models import CareerConsultant
from commands.authorized_users import AUTHORIZED_USERS
from commands.start_commands import exit_to_main_menu
from datetime import datetime

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞
AWAIT_CC_TELEGRAM = "AWAIT_CC_TELEGRAM"
AWAIT_CC_NAME = "AWAIT_CC_NAME"


async def add_career_consultant_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞."""
    user_id = update.message.from_user.id
    if user_id not in AUTHORIZED_USERS:
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
        return ConversationHandler.END
    
    await update.message.reply_text(
        "üíº –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞\n\n"
        "–í–≤–µ–¥–∏—Ç–µ Telegram –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: @consultant):"
    )
    return AWAIT_CC_TELEGRAM


async def handle_cc_telegram(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ Telegram –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞."""
    telegram = update.message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç
    if not telegram.startswith('@'):
        await update.message.reply_text("‚ùå Telegram –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å @. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
        return AWAIT_CC_TELEGRAM
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç
    existing = session.query(CareerConsultant).filter(CareerConsultant.telegram == telegram).first()
    if existing:
        await update.message.reply_text(
            f"‚ùå –ö–∞—Ä—å–µ—Ä–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç —Å Telegram {telegram} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.",
            reply_markup=ReplyKeyboardMarkup([["üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]], one_time_keyboard=True)
        )
        return ConversationHandler.END
    
    context.user_data["cc_telegram"] = telegram
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –∏–º—è –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞:")
    return AWAIT_CC_NAME


async def handle_cc_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∏–º–µ–Ω–∏ –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞."""
    full_name = update.message.text.strip()
    telegram = context.user_data.get("cc_telegram")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞
        new_consultant = CareerConsultant(
            telegram=telegram,
            full_name=full_name,
            is_active=True,
            created_at=datetime.now().date()
        )
        
        session.add(new_consultant)
        session.commit()
        
        await update.message.reply_text(
            f"‚úÖ –ö–∞—Ä—å–µ—Ä–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç {full_name} ({telegram}) —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!",
            reply_markup=ReplyKeyboardMarkup([["üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]], one_time_keyboard=True)
        )
        return ConversationHandler.END
        
    except Exception as e:
        session.rollback()
        await update.message.reply_text(
            f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞: {str(e)}",
            reply_markup=ReplyKeyboardMarkup([["üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]], one_time_keyboard=True)
        )
        return ConversationHandler.END


async def list_career_consultants(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ä—å–µ—Ä–Ω—ã—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–≤."""
    user_id = update.message.from_user.id
    if user_id not in AUTHORIZED_USERS:
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
        return ConversationHandler.END
    
    consultants = session.query(CareerConsultant).filter(CareerConsultant.is_active == True).all()
    
    if not consultants:
        await update.message.reply_text("üìù –ö–∞—Ä—å–µ—Ä–Ω—ã—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.")
        return await exit_to_main_menu(update, context)
    
    response = "üíº –°–ø–∏—Å–æ–∫ –∫–∞—Ä—å–µ—Ä–Ω—ã—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–≤:\n\n"
    for consultant in consultants:
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
        students_count = len(consultant.students)
        response += f"üë§ {consultant.full_name}\n"
        response += f"üì± {consultant.telegram}\n"
        response += f"üë• –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: {students_count}\n"
        response += f"üìÖ –î–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {consultant.created_at}\n"
        response += "‚îÄ" * 30 + "\n"
    
    await update.message.reply_text(response)
    return await exit_to_main_menu(update, context)


# –°–æ–∑–¥–∞–µ–º ConversationHandler –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—å–µ—Ä–Ω—ã—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–≤
add_career_consultant_handler = ConversationHandler(
    entry_points=[MessageHandler(filters.Regex("^üíº –î–æ–±–∞–≤–∏—Ç—å –ö–ö$"), add_career_consultant_start)],
    states={
        AWAIT_CC_TELEGRAM: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_cc_telegram)],
        AWAIT_CC_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_cc_name)],
    },
    fallbacks=[MessageHandler(filters.Regex("^üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é$"), exit_to_main_menu)],
) 