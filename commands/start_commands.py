from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler
from commands.authorized_users import AUTHORIZED_USERS, NOT_ADMINS
from data_base.operations import get_career_consultant_by_telegram
from data_base.db import get_session


async def is_career_consultant(user_id: int, username: str = None) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∞—Ä—å–µ—Ä–Ω—ã–º –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–º."""
    if not username:
        return False
    
    session = get_session()
    try:
        consultant = get_career_consultant_by_telegram(f"@{username}")
        return consultant is not None and consultant.is_active
    except Exception:
        return False
    finally:
        session.close()


# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    """
    user_id = update.message.from_user.id
    username = update.message.from_user.username

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –¥–ª—è –∫–∞—Ä—å–µ—Ä–Ω—ã—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–≤ –≤ –ë–î
    if await is_career_consultant(user_id, username):
        # –°—Ä–∞–∑—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –º–µ–Ω—é –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞
        from bot.handlers.career_consultant_handlers import career_consultant_start
        return await career_consultant_start(update, context)
    elif user_id not in AUTHORIZED_USERS and user_id not in NOT_ADMINS:
        await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return
    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –º–µ–Ω—é –¥–ª—è not_admin
    elif user_id in NOT_ADMINS:
        reply_keyboard = [['–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞', '–ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞', '–ü–æ–∏—Å–∫ —É—á–µ–Ω–∏–∫–∞', '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç–∞', '–î–æ–ø —Ä–∞—Å—Ö–æ–¥—ã']]
    else:
        reply_keyboard = [
            ['–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞', '–ü—Ä–µ–º–∏—è –∫—É—Ä–∞—Ç–æ—Ä—É', '–ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞'],
            ['–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç–∞', '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'],
            ['–ü–æ–∏—Å–∫ —É—á–µ–Ω–∏–∫–∞', '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', "üìä –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –∑–∞—Ä–ø–ª–∞—Ç—É", '–î–æ–ø —Ä–∞—Å—Ö–æ–¥—ã'],
            ['üíº –î–æ–±–∞–≤–∏—Ç—å –ö–ö']  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ö–ö
        ]

    markup = ReplyKeyboardMarkup(reply_keyboard, resize_keyboard=True, one_time_keyboard=True)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)


# –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
async def exit_to_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ ConversationHandler.
    """
    user_id = update.message.from_user.id

    username = update.message.from_user.username

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –¥–ª—è –∫–∞—Ä—å–µ—Ä–Ω—ã—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–≤ –≤ –ë–î
    if await is_career_consultant(user_id, username):
        # –°—Ä–∞–∑—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –º–µ–Ω—é –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞
        from bot.handlers.career_consultant_handlers import career_consultant_start
        return await career_consultant_start(update, context)
    elif user_id not in AUTHORIZED_USERS and user_id not in NOT_ADMINS:
        await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return
    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –º–µ–Ω—é –¥–ª—è not_admin
    elif user_id in NOT_ADMINS:
        reply_keyboard = [['–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞','–ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞', '–ü–æ–∏—Å–∫ —É—á–µ–Ω–∏–∫–∞', '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç–∞', '–î–æ–ø —Ä–∞—Å—Ö–æ–¥—ã']]
    else:
        reply_keyboard = [
            ['–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞', '–ü—Ä–µ–º–∏—è –∫—É—Ä–∞—Ç–æ—Ä—É', '–ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞'],
            ['–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç–∞', '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'],
            ['–ü–æ–∏—Å–∫ —É—á–µ–Ω–∏–∫–∞', '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', "üìä –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –∑–∞—Ä–ø–ª–∞—Ç—É", '–î–æ–ø —Ä–∞—Å—Ö–æ–¥—ã'],
            ['üíº –î–æ–±–∞–≤–∏—Ç—å –ö–ö']  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ö–ö
        ]

    markup = ReplyKeyboardMarkup(reply_keyboard, resize_keyboard=True, one_time_keyboard=True)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
    return ConversationHandler.END
