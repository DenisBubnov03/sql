"""
–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ó–ü –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ—É–ª–ª—Å—Ç–µ–∫ –∫—É—Ä—Å–∞ –ø–æ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ.
"""
from datetime import datetime, date
from sqlalchemy import func
from data_base.db import session
from data_base.models import Student, FullstackTopicAssign, Mentor
from commands.fullstack_constants import TOPIC_FIELD_MAPPING, AUTO_MODULE_FIELD_MAPPING
from commands.logger import custom_logger

logger = custom_logger

def calculate_fullstack_salary(start_date: date, end_date: date):
    """
    –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ó–ü –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ñ—É–ª–ª—Å—Ç–µ–∫ —Å–∏—Å—Ç–µ–º—ã: –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤, –∫—É—Ä–∞—Ç–æ—Ä–æ–≤ + 10% –±–æ–Ω—É—Å—ã –∑–∞ –ø–µ—Ä–≤—ã–µ –º–æ–¥—É–ª–∏.
    
    –í–ê–ñ–ù–û: 10% –±–æ–Ω—É—Å—ã –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∑–∞ –º–æ–¥—É–ª–∏, —Å–¥–∞–Ω–Ω—ã–µ –í –ü–ï–†–ò–û–î–ï –†–ê–°–ß–ï–¢–ê (start_date - end_date).
    
    –ë–æ–Ω—É—Å—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞–º:
    - –†—É—á–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä (ID=1): –∑–∞ —Å–¥–∞—á—É "1 –º–æ–¥—É–ª—å" (—Ä—É—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ)
    - –ê–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä (ID=3): –∑–∞ —Å–¥–∞—á—É "–°–¥–∞—á–∞ 2 –º–æ–¥—É–ª—è" (–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è, –Ω–∞—á–∏–Ω–∞–µ–º —Å–æ 2-–≥–æ)
    - –í–ê–ñ–ù–û: –ë–æ–Ω—É—Å –ù–ï –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è, –µ—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç –Ω–∞ —Å–∞–º–æ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ (–∏–∑–±–µ–≥–∞–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è)
    
    Args:
        start_date: –ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –ø–µ—Ä–∏–æ–¥–∞ —Ä–∞—Å—á–µ—Ç–∞
        end_date: –ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞ –ø–µ—Ä–∏–æ–¥–∞ —Ä–∞—Å—á–µ—Ç–∞
        
    Returns:
        dict: –°–ª–æ–≤–∞—Ä—å —Å –ó–ü –¥–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤ –∏ –∫—É—Ä–∞—Ç–æ—Ä–æ–≤, –ª–æ–≥–∞–º–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    """
    logger.info(f"üìä –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞—Å—á–µ—Ç –ó–ü –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞ —Ñ—É–ª–ª—Å—Ç–µ–∫ –∑–∞ –ø–µ—Ä–∏–æ–¥ {start_date} - {end_date}")
    
    # –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ —É—á–µ—Ç–∞ —Ñ—É–ª–ª—Å—Ç–µ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ (—Å —Å–µ–Ω—Ç—è–±—Ä—è 2025)
    september_start = date(2025, 9, 1)
    logger.info(f"üìÖ –£—á–∏—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –ø—Ä–∏—à–µ–¥—à–∏—Ö —Å {september_start}")
    
    # –ü–æ–ª—É—á–∞–µ–º –í–°–ï –∑–∞–ø–∏—Å–∏ –ø—Ä–∏–Ω—è—Ç—ã—Ö —Ç–µ–º –∑–∞ –ø–µ—Ä–∏–æ–¥ (–∏ –æ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤, –∏ –æ—Ç –∫—É—Ä–∞—Ç–æ—Ä–æ–≤)
    # –í–ê–ñ–ù–û: —É—á–∏—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏—à–ª–∏ —Å —Å–µ–Ω—Ç—è–±—Ä—è 2025
    topic_assignments = session.query(FullstackTopicAssign).join(Student).filter(
        Student.training_type == "–§—É–ª–ª—Å—Ç–µ–∫",
        Student.start_date >= september_start,  # üî• –ù–û–í–´–ô –§–ò–õ–¨–¢–†: —Ç–æ–ª—å–∫–æ —Å—Ç—É–¥–µ–Ω—Ç—ã —Å —Å–µ–Ω—Ç—è–±—Ä—è
        func.date(FullstackTopicAssign.assigned_at) >= start_date,
        func.date(FullstackTopicAssign.assigned_at) <= end_date
    ).all()
    
    logger.info(f"üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –ø—Ä–∏–Ω—è—Ç—ã—Ö —Ç–µ–º –∑–∞ –ø–µ—Ä–∏–æ–¥: {len(topic_assignments)}")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    all_fullstack_students = session.query(Student).filter(Student.training_type == "–§—É–ª–ª—Å—Ç–µ–∫").count()
    september_fullstack_students = session.query(Student).filter(
        Student.training_type == "–§—É–ª–ª—Å—Ç–µ–∫",
        Student.start_date >= september_start
    ).count()
    
    logger.info(f"üìä –í—Å–µ–≥–æ —Ñ—É–ª–ª—Å—Ç–µ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ –ë–î: {all_fullstack_students}")
    logger.info(f"üìä –§—É–ª–ª—Å—Ç–µ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å —Å–µ–Ω—Ç—è–±—Ä—è: {september_fullstack_students}")
    logger.info(f"üìä –ò—Å–∫–ª—é—á–µ–Ω–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ (–¥–æ —Å–µ–Ω—Ç—è–±—Ä—è): {all_fullstack_students - september_fullstack_students}")
    
    # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
    logger.info("üîç DEBUG: –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –ø—Ä–∏–Ω—è—Ç—ã—Ö —Ç–µ–º:")
    for assignment in topic_assignments:
        topic_info = f"–†—É—á–Ω–∞—è: {assignment.topic_manual}" if assignment.topic_manual else f"–ê–≤—Ç–æ: {assignment.topic_auto}"
        logger.info(f"  ‚Ä¢ ID {assignment.id}: –°—Ç—É–¥–µ–Ω—Ç {assignment.student_id}, –ú–µ–Ω—Ç–æ—Ä {assignment.mentor_id} | {topic_info} | {assignment.assigned_at}")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    director_salaries = {
        1: 0.0,  # –†—É—á–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä
        3: 0.0   # –ê–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä
    }
    detailed_logs = {
        1: [],
        3: []
    }
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Å—Ç—É–¥–µ–Ω—Ç–∞–º –∏ —Ä–∞–∑–¥–µ–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤/–∫—É—Ä–∞—Ç–æ—Ä–æ–≤
    students_data = {}
    curator_students = {}  # –°—Ç—É–¥–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã—Ö –≤–∑—è–ª–∏ –∫—É—Ä–∞—Ç–æ—Ä—ã
    
    for assignment in topic_assignments:
        student_id = assignment.student_id
        if student_id not in students_data:
            student = session.query(Student).filter(Student.id == student_id).first()
            students_data[student_id] = {
                'student': student,
                'manual_topics': 0,
                'auto_topics': 0,
                'is_curator_student': False,
                'curator_id': None,
                'curator_direction': None
            }
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä —ç—Ç–æ –∏–ª–∏ –∫—É—Ä–∞—Ç–æ—Ä
        if assignment.mentor_id in [1, 3]:  # –î–∏—Ä–µ–∫—Ç–æ—Ä –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            # –°—á–∏—Ç–∞–µ–º —Ç–µ–º—ã –ø–æ —Ç–∏–ø–∞–º –æ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            if assignment.mentor_id == 1 and assignment.topic_manual is not None:
                students_data[student_id]['manual_topics'] += 1
            if assignment.mentor_id == 3 and assignment.topic_auto is not None:
                students_data[student_id]['auto_topics'] += 1
        else:  # –ö—É—Ä–∞—Ç–æ—Ä
            students_data[student_id]['is_curator_student'] = True
            students_data[student_id]['curator_id'] = assignment.mentor_id
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä–∞—Ç–æ—Ä–∞ –ø–æ —Ç–∏–ø—É —Ç–µ–º—ã
            if assignment.topic_manual is not None:
                students_data[student_id]['curator_direction'] = 'manual'
            elif assignment.topic_auto is not None:
                students_data[student_id]['curator_direction'] = 'auto'
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É—Ä–∞—Ç–æ—Ä–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ó–ü
            if assignment.mentor_id not in curator_students:
                curator_students[assignment.mentor_id] = []
            if student_id not in [s['student_id'] for s in curator_students[assignment.mentor_id]]:
                curator_students[assignment.mentor_id].append({
                    'student_id': student_id,
                    'student': students_data[student_id]['student'],
                    'direction': students_data[student_id]['curator_direction']
                })
    
    logger.info(f"üìä –ù–∞–π–¥–µ–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å –ø—Ä–∏–Ω—è—Ç—ã–º–∏ —Ç–µ–º–∞–º–∏: {len(students_data)}")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ó–ü –∫—É—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –∏—Ö –ª–æ–≥–∏
    curator_salaries = {}
    curator_detailed_logs = {}  # –î–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ –¥–ª—è –∫—É—Ä–∞—Ç–æ—Ä–æ–≤
    
    for student_id, data in students_data.items():
        student = data['student']
        logger.info(f"üìä –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞: {student.fio} (ID {student.id})")
        
        # –ü–æ–ª—É—á–∞–µ–º total_cost —Å—Ç—É–¥–µ–Ω—Ç–∞
        total_cost = float(student.total_cost) if student.total_cost else 0
        if total_cost == 0:
            logger.warning(f"‚ö†Ô∏è –£ —Å—Ç—É–¥–µ–Ω—Ç–∞ {student.fio} total_cost = 0, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
            continue
        
        if data['is_curator_student']:
            # === –û–ë–†–ê–ë–û–¢–ö–ê –°–¢–£–î–ï–ù–¢–û–í –ö–£–†–ê–¢–û–†–û–í ===
            curator_id = data['curator_id']
            curator_direction = data['curator_direction']
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ó–ü –∫—É—Ä–∞—Ç–æ—Ä–∞ –∏ –µ–≥–æ –ª–æ–≥–∏
            if curator_id not in curator_salaries:
                curator_salaries[curator_id] = 0
            if curator_id not in curator_detailed_logs:
                curator_detailed_logs[curator_id] = []
            
            if curator_direction == 'manual':
                # === –†–£–ß–ù–û–ô –ö–£–†–ê–¢–û–†: –∫–∞–∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä, –Ω–æ 10% –≤–º–µ—Å—Ç–æ 30% ===
                # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ —Å–æ–∑–≤–æ–Ω–∞ (10% –æ—Ç total_cost)
                call_cost = total_cost * 0.10
                
                # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–Ω—è—Ç—ã—Ö —Ç–µ–º –∫—É—Ä–∞—Ç–æ—Ä–æ–º
                manual_topics_count = len(TOPIC_FIELD_MAPPING)
                manual_call_price = call_cost / manual_topics_count if manual_topics_count > 0 else 0
                
                # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∏–Ω—è—Ç—ã–µ —Ç–µ–º—ã –∫—É—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è —ç—Ç–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
                curator_manual_topics = 0
                for assignment in topic_assignments:
                    if (assignment.student_id == student_id and 
                        assignment.mentor_id == curator_id and 
                        assignment.topic_manual is not None):
                        curator_manual_topics += 1
                
                curator_salary = curator_manual_topics * manual_call_price
                curator_salaries[curator_id] += curator_salary
                
                # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –ª–æ–≥ –¥–ª—è –∫—É—Ä–∞—Ç–æ—Ä–∞
                curator_detailed_logs[curator_id].append(
                    f"üíº –†—É—á–Ω–æ–π –∫—É—Ä–∞—Ç–æ—Ä –∑–∞ —Ñ—É–ª–ª—Å—Ç–µ–∫ —Å—Ç—É–¥–µ–Ω—Ç–∞ {student.fio} {student.telegram} {student.id} | "
                    f"–ü—Ä–∏–Ω—è–ª {curator_manual_topics} —Ç–µ–º –ø–æ {round(manual_call_price, 2)} —Ä—É–±. | +{round(curator_salary, 2)} —Ä—É–±."
                )
                
                # 10% —Ä—É—á–Ω–æ–º—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç –ù–ï –Ω–∞ —Ä—É—á–Ω–æ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ)
                if student.mentor_id != 1:  # –°—Ç—É–¥–µ–Ω—Ç –ù–ï –Ω–∞ —Ä—É—á–Ω–æ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ
                    director_salaries[1] += total_cost * 0.10
                    logger.info(f"üìä –†—É—á–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä (ID 1): –±–æ–Ω—É—Å +{round(total_cost * 0.10, 2)} —Ä—É–±. –∑–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞ {student.fio} (–∫—É—Ä–∞—Ç–æ—Ä {curator_id})")
                else:
                    logger.debug(f"üö´ –†—É—á–Ω–æ–º—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—É –ù–ï –Ω–∞—á–∏—Å–ª–µ–Ω –±–æ–Ω—É—Å: —Å—Ç—É–¥–µ–Ω—Ç {student.fio} –Ω–∞ —Ä—É—á–Ω–æ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ")
                
                logger.info(f"üìä –†—É—á–Ω–æ–π –∫—É—Ä–∞—Ç–æ—Ä {curator_id}: –ø—Ä–∏–Ω—è–ª {curator_manual_topics} —Ç–µ–º, –ó–ü +{round(curator_salary, 2)} —Ä—É–±.")
                
            else:  # auto
                # === –ê–í–¢–û –ö–£–†–ê–¢–û–†: –∫–∞–∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä, –Ω–æ 20% –≤–º–µ—Å—Ç–æ 30% ===
                # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ —Å–æ–∑–≤–æ–Ω–∞ (20% –æ—Ç total_cost)
                call_cost = total_cost * 0.20
                
                # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–Ω—è—Ç—ã—Ö –º–æ–¥—É–ª–µ–π –∫—É—Ä–∞—Ç–æ—Ä–æ–º
                auto_modules_count = len(AUTO_MODULE_FIELD_MAPPING)
                auto_call_price = call_cost / auto_modules_count if auto_modules_count > 0 else 0
                
                # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∏–Ω—è—Ç—ã–µ –º–æ–¥—É–ª–∏ –∫—É—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è —ç—Ç–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
                curator_auto_topics = 0
                for assignment in topic_assignments:
                    if (assignment.student_id == student_id and 
                        assignment.mentor_id == curator_id and 
                        assignment.topic_auto is not None):
                        curator_auto_topics += 1
                
                curator_salary = curator_auto_topics * auto_call_price
                curator_salaries[curator_id] += curator_salary
                
                # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –ª–æ–≥ –¥–ª—è –∞–≤—Ç–æ –∫—É—Ä–∞—Ç–æ—Ä–∞
                curator_detailed_logs[curator_id].append(
                    f"üíº –ê–≤—Ç–æ –∫—É—Ä–∞—Ç–æ—Ä –∑–∞ —Ñ—É–ª–ª—Å—Ç–µ–∫ —Å—Ç—É–¥–µ–Ω—Ç–∞ {student.fio} {student.telegram} {student.id} | "
                    f"–ü—Ä–∏–Ω—è–ª {curator_auto_topics} –º–æ–¥—É–ª–µ–π –ø–æ {round(auto_call_price, 2)} —Ä—É–±. | +{round(curator_salary, 2)} —Ä—É–±."
                )
                
                # 10% –∞–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç –ù–ï –Ω–∞ –∞–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ)
                if student.auto_mentor_id != 3:  # –°—Ç—É–¥–µ–Ω—Ç –ù–ï –Ω–∞ –∞–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ
                    director_salaries[3] += total_cost * 0.10
                    logger.info(f"üìä –ê–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä (ID 3): –±–æ–Ω—É—Å +{round(total_cost * 0.10, 2)} —Ä—É–±. –∑–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞ {student.fio} (–∫—É—Ä–∞—Ç–æ—Ä {curator_id})")
                else:
                    logger.debug(f"üö´ –ê–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—É –ù–ï –Ω–∞—á–∏—Å–ª–µ–Ω –±–æ–Ω—É—Å: —Å—Ç—É–¥–µ–Ω—Ç {student.fio} –Ω–∞ –∞–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ")
                
                logger.info(f"üìä –ê–≤—Ç–æ –∫—É—Ä–∞—Ç–æ—Ä {curator_id}: –ø—Ä–∏–Ω—è–ª {curator_auto_topics} –º–æ–¥—É–ª–µ–π, –ó–ü +{round(curator_salary, 2)} —Ä—É–±.")
            
        else:
            # === –û–ë–†–ê–ë–û–¢–ö–ê –°–¢–£–î–ï–ù–¢–û–í –î–ò–†–ï–ö–¢–û–†–û–í –ù–ê–ü–†–ê–í–õ–ï–ù–ò–Ø ===
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ —Å–æ–∑–≤–æ–Ω–∞ (30% –æ—Ç total_cost)
            call_cost = total_cost * 0.3
            
            # === –†–ê–°–ß–ï–¢ –î–õ–Ø –†–£–ß–ù–û–ì–û –î–ò–†–ï–ö–¢–û–†–ê (ID = 1) ===
            manual_topics_count = len(TOPIC_FIELD_MAPPING)
            manual_call_price = call_cost / manual_topics_count if manual_topics_count > 0 else 0
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ –ø–æ–¥—Å—á–∏—Ç–∞–Ω–Ω—ã–µ —Ä—É—á–Ω—ã–µ —Ç–µ–º—ã
            manual_accepted_topics = data['manual_topics']
            
            # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            logger.info(f"üîç DEBUG: –°—Ç—É–¥–µ–Ω—Ç {student.fio} (ID {student.id})")
            logger.info(f"üîç DEBUG: –†—É—á–Ω—ã—Ö —Ç–µ–º –¥–ª—è —ç—Ç–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞: {manual_accepted_topics}")
            logger.info(f"üîç DEBUG: –ê–≤—Ç–æ —Ç–µ–º –¥–ª—è —ç—Ç–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞: {data['auto_topics']}")
            
            manual_salary = manual_accepted_topics * manual_call_price
            director_salaries[1] += manual_salary
            
            # –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞
            if manual_accepted_topics > 0:
                detailed_logs[1].append(
                    f"üíº –†—É—á–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä –ø—Ä–∏–Ω—è–ª {manual_accepted_topics} —Ç–µ–º —É —Å—Ç—É–¥–µ–Ω—Ç–∞ {student.fio} (ID {student.id}) | "
                    f"–°—Ç–æ–∏–º–æ—Å—Ç—å —Å–æ–∑–≤–æ–Ω–∞: {round(manual_call_price, 2)} —Ä—É–±. | "
                    f"–ó–ü: +{round(manual_salary, 2)} —Ä—É–±."
                )
                logger.info(f"üìä –†—É—á–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä: {manual_accepted_topics} —Ç–µ–º, –ó–ü +{round(manual_salary, 2)} —Ä—É–±.")
            
            # === –†–ê–°–ß–ï–¢ –î–õ–Ø –ê–í–¢–û –î–ò–†–ï–ö–¢–û–†–ê (ID = 3) ===
            auto_modules_count = len(AUTO_MODULE_FIELD_MAPPING)
            auto_call_price = call_cost / auto_modules_count if auto_modules_count > 0 else 0
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ –ø–æ–¥—Å—á–∏—Ç–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ —Ç–µ–º—ã
            auto_accepted_topics = data['auto_topics']
            
            auto_salary = auto_accepted_topics * auto_call_price
            director_salaries[3] += auto_salary
            
            # –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –∞–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞
            if auto_accepted_topics > 0:
                detailed_logs[3].append(
                    f"üíº –ê–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä –ø—Ä–∏–Ω—è–ª {auto_accepted_topics} –º–æ–¥—É–ª–µ–π —É —Å—Ç—É–¥–µ–Ω—Ç–∞ {student.fio} (ID {student.id}) | "
                    f"–°—Ç–æ–∏–º–æ—Å—Ç—å —Å–æ–∑–≤–æ–Ω–∞: {round(auto_call_price, 2)} —Ä—É–±. | "
                    f"–ó–ü: +{round(auto_salary, 2)} —Ä—É–±."
                )
                logger.info(f"üìä –ê–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä: {auto_accepted_topics} –º–æ–¥—É–ª–µ–π, –ó–ü +{round(auto_salary, 2)} —Ä—É–±.")
    
    # –ò—Ç–æ–≥–æ–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    logger.info(f"üìä –ò—Ç–æ–≥–æ–≤—ã–µ –ó–ü –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
    logger.info(f"üìä –†—É—á–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä (ID 1): {round(director_salaries[1], 2)} —Ä—É–±.")
    logger.info(f"üìä –ê–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä (ID 3): {round(director_salaries[3], 2)} —Ä—É–±.")
    
    logger.info(f"üìä –ò—Ç–æ–≥–æ–≤—ã–µ –ó–ü –∫—É—Ä–∞—Ç–æ—Ä–æ–≤:")
    for curator_id, salary in curator_salaries.items():
        logger.info(f"üìä –ö—É—Ä–∞—Ç–æ—Ä (ID {curator_id}): {round(salary, 2)} —Ä—É–±.")
    
    # üîπ –ù–û–í–ê–Ø –£–ü–†–û–©–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê: 10% –û–¢ –°–¢–û–ò–ú–û–°–¢–ò –ö–£–†–°–ê –ü–†–ò –°–î–ê–ß–ï –ü–ï–†–í–û–ì–û –ú–û–î–£–õ–Ø
    logger.info("üîπ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º 10% –±–æ–Ω—É—Å—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞–º –∑–∞ —Å–¥–∞—á—É –ø–µ—Ä–≤—ã—Ö –º–æ–¥—É–ª–µ–π")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —Ñ—É–ª–ª—Å—Ç–µ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –ø—Ä–∏—à–µ–¥—à–∏—Ö —Å —Å–µ–Ω—Ç—è–±—Ä—è
    fullstack_students = session.query(Student).filter(
        Student.training_type == "–§—É–ª–ª—Å—Ç–µ–∫",
        Student.start_date >= september_start
    ).all()
    
    module_bonuses_applied = 0
    
    for student in fullstack_students:
        if not student.total_cost:
            logger.debug(f"üö´ –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞ {student.fio}: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∫—É—Ä—Å–∞")
            continue
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—É–¥–µ–Ω—Ç –ù–ï –Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ (–∏–Ω–∞—á–µ –Ω–µ –¥–∞–µ–º 10% –±–æ–Ω—É—Å)
        is_on_manual_director = student.mentor_id == 1  # –†—É—á–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä
        is_on_auto_director = student.auto_mentor_id == 3  # –ê–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä
        
        logger.debug(f"üéØ –°—Ç—É–¥–µ–Ω—Ç {student.fio}: mentor_id={student.mentor_id}, auto_mentor_id={student.auto_mentor_id}")
        logger.debug(f"üéØ –ù–∞ —Ä—É—á–Ω–æ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ: {is_on_manual_director}, –Ω–∞ –∞–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ: {is_on_auto_director}")
        
        bonus_amount = float(student.total_cost) * 0.1
        bonuses_applied = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–¥–∞–ª –ª–∏ —Å—Ç—É–¥–µ–Ω—Ç 1 –º–æ–¥—É–ª—å –ø–æ —Ä—É—á–Ω–æ–º—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é –í –ü–ï–†–ò–û–î–ï –†–ê–°–ß–ï–¢–ê
        has_manual_module_1 = session.query(FullstackTopicAssign).filter(
            FullstackTopicAssign.student_id == student.id,
            FullstackTopicAssign.topic_manual == "1 –º–æ–¥—É–ª—å",
            FullstackTopicAssign.assigned_at >= start_date,
            FullstackTopicAssign.assigned_at <= end_date
        ).first() is not None
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–¥–∞–ª –ª–∏ —Å—Ç—É–¥–µ–Ω—Ç 2 –º–æ–¥—É–ª—å –ø–æ –∞–≤—Ç–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é –í –ü–ï–†–ò–û–î–ï –†–ê–°–ß–ï–¢–ê (–Ω–∞—á–∏–Ω–∞–µ–º —Å–æ 2-–≥–æ –º–æ–¥—É–ª—è)
        has_auto_module_2 = session.query(FullstackTopicAssign).filter(
            FullstackTopicAssign.student_id == student.id,
            FullstackTopicAssign.topic_auto == "–°–¥–∞—á–∞ 2 –º–æ–¥—É–ª—è",
            FullstackTopicAssign.assigned_at >= start_date,
            FullstackTopicAssign.assigned_at <= end_date
        ).first() is not None
        
        logger.debug(f"üéØ –°—Ç—É–¥–µ–Ω—Ç {student.fio}: —Ä—É—á–Ω–æ–π –º–æ–¥—É–ª—å 1 = {has_manual_module_1}, –∞–≤—Ç–æ –º–æ–¥—É–ª—å 2 = {has_auto_module_2}, —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞ = {student.total_cost}")
        
        # –ë–æ–Ω—É—Å —Ä—É—á–Ω–æ–º—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—É (ID=1) —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–¥–∞–Ω —Ä—É—á–Ω–æ–π 1 –º–æ–¥—É–ª—å –ò —Å—Ç—É–¥–µ–Ω—Ç –ù–ï –Ω–∞ —Ä—É—á–Ω–æ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ
        if has_manual_module_1 and not is_on_manual_director:
            director_salaries[1] += bonus_amount
            detailed_logs[1].append(
                f"üéØ 10% –±–æ–Ω—É—Å –∑–∞ —Å–¥–∞—á—É 1 –º–æ–¥—É–ª—è —Ä—É—á–Ω–æ–≥–æ –í –ü–ï–†–ò–û–î–ï: —Å—Ç—É–¥–µ–Ω—Ç {student.fio} {student.telegram} (ID {student.id}) | "
                f"–°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞: {student.total_cost} —Ä—É–±. | +{round(bonus_amount, 2)} —Ä—É–±."
            )
            bonuses_applied.append("—Ä—É—á–Ω–æ–π")
        elif has_manual_module_1 and is_on_manual_director:
            logger.debug(f"üö´ –†—É—á–Ω–æ–º—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—É –ù–ï –Ω–∞—á–∏—Å–ª–µ–Ω –±–æ–Ω—É—Å: —Å—Ç—É–¥–µ–Ω—Ç {student.fio} –Ω–∞ —Ä—É—á–Ω–æ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ")
        
        # –ë–æ–Ω—É—Å –∞–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—É (ID=3) —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–¥–∞–Ω –∞–≤—Ç–æ 2 –º–æ–¥—É–ª—å –ò —Å—Ç—É–¥–µ–Ω—Ç –ù–ï –Ω–∞ –∞–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ
        if has_auto_module_2 and not is_on_auto_director:
            director_salaries[3] += bonus_amount
            detailed_logs[3].append(
                f"üéØ 10% –±–æ–Ω—É—Å –∑–∞ —Å–¥–∞—á—É 2 –º–æ–¥—É–ª—è –∞–≤—Ç–æ –í –ü–ï–†–ò–û–î–ï: —Å—Ç—É–¥–µ–Ω—Ç {student.fio} {student.telegram} (ID {student.id}) | "
                f"–°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞: {student.total_cost} —Ä—É–±. | +{round(bonus_amount, 2)} —Ä—É–±."
            )
            bonuses_applied.append("–∞–≤—Ç–æ")
        elif has_auto_module_2 and is_on_auto_director:
            logger.debug(f"üö´ –ê–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—É –ù–ï –Ω–∞—á–∏—Å–ª–µ–Ω –±–æ–Ω—É—Å: —Å—Ç—É–¥–µ–Ω—Ç {student.fio} –Ω–∞ –∞–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ")
        
        if bonuses_applied:
            logger.info(f"üîπ –§—É–ª–ª—Å—Ç–µ–∫ —Å—Ç—É–¥–µ–Ω—Ç {student.fio} (ID {student.id}): —Å–¥–∞–ª –º–æ–¥—É–ª–∏ –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º {', '.join(bonuses_applied)}, –±–æ–Ω—É—Å {round(bonus_amount, 2)} —Ä—É–±. –∫–∞–∂–¥–æ–º—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—É")
            module_bonuses_applied += len(bonuses_applied)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –Ω–æ–≤–æ–π —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ
    logger.info(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ 10% –±–æ–Ω—É—Å–æ–≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞–º (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞, —Ç–æ–ª—å–∫–æ —Å—Ç—É–¥–µ–Ω—Ç—ã —Å {september_start}):")
    logger.info(f"üìä –í—Å–µ–≥–æ —Ñ—É–ª–ª—Å—Ç–µ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å —Å–µ–Ω—Ç—è–±—Ä—è: {len(fullstack_students)}")
    logger.info(f"üìä –í—Å–µ–≥–æ –±–æ–Ω—É—Å–æ–≤ –Ω–∞—á–∏—Å–ª–µ–Ω–æ: {module_bonuses_applied}")
    logger.info(f"üìä –ë–æ–Ω—É—Å—ã –ø—Ä–∏–º–µ–Ω–µ–Ω—ã: {'‚úÖ –î–ê' if module_bonuses_applied > 0 else '‚ùå –ù–ï–¢'}")
    logger.info(f"üìÖ –í–ê–ñ–ù–û: –£—á–∏—Ç—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å—Ç—É–¥–µ–Ω—Ç—ã, –ø—Ä–∏—à–µ–¥—à–∏–µ —Å {september_start} –∏ –ø–æ–∑–∂–µ")
    logger.info(f"üéØ –ù–û–í–û–ï: 10% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∫—É—Ä—Å–∞ –ø—Ä–∏ —Å–¥–∞—á–µ –ø–µ—Ä–≤–æ–≥–æ –º–æ–¥—É–ª—è –í –ü–ï–†–ò–û–î–ï –†–ê–°–ß–ï–¢–ê")
    logger.info(f"   ‚Ä¢ –†—É—á–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä: –±–æ–Ω—É—Å –ø—Ä–∏ —Å–¥–∞—á–µ '—Ä—É—á–Ω–æ–π 1 –º–æ–¥—É–ª—å' –≤ –ø–µ—Ä–∏–æ–¥–µ {start_date} - {end_date}")
    logger.info(f"   ‚Ä¢ –ê–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä: –±–æ–Ω—É—Å –ø—Ä–∏ —Å–¥–∞—á–µ '–∞–≤—Ç–æ 2 –º–æ–¥—É–ª—å' (–°–¥–∞—á–∞ 2 –º–æ–¥—É–ª—è) –≤ –ø–µ—Ä–∏–æ–¥–µ {start_date} - {end_date}")
    logger.info(f"   ‚Ä¢ –í–ê–ñ–ù–û: –ë–æ–Ω—É—Å –ù–ï –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è, –µ—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç –Ω–∞ —Å–∞–º–æ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ")
    logger.info(f"   ‚Ä¢ –ö–∞–∂–¥—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä –ø–æ–ª—É—á–∞–µ—Ç –±–æ–Ω—É—Å –∑–∞ –∫–∞–∂–¥—É—é —Å–¥–∞—á—É –ø–µ—Ä–≤–æ–≥–æ –º–æ–¥—É–ª—è –≤ –ø–µ—Ä–∏–æ–¥–µ")
    
    return {
        'director_salaries': director_salaries,
        'curator_salaries': curator_salaries,
        'logs': detailed_logs,
        'curator_logs': curator_detailed_logs,  # –î–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ –∫—É—Ä–∞—Ç–æ—Ä–æ–≤
        'students_processed': len(students_data),
        'topics_processed': len(topic_assignments),
        'module_bonuses_applied': module_bonuses_applied,
        'fullstack_students_stats': {
            'total_students': len(fullstack_students),
            'bonuses_applied': module_bonuses_applied
        }
    }


def get_fullstack_salary_summary(start_date: date, end_date: date):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É –ø–æ –ó–ü –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞ —Ñ—É–ª–ª—Å—Ç–µ–∫.
    
    Args:
        start_date: –ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –ø–µ—Ä–∏–æ–¥–∞
        end_date: –ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞ –ø–µ—Ä–∏–æ–¥–∞
        
    Returns:
        str: –¢–µ–∫—Å—Ç–æ–≤–∞—è —Å–≤–æ–¥–∫–∞
    """
    result = calculate_fullstack_salary(start_date, end_date)
    
    summary = f"üìä –ó–ü –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞ —Ñ—É–ª–ª—Å—Ç–µ–∫ ({start_date} - {end_date}):\n\n"
    summary += f"üë®‚Äçüè´ –†—É—á–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä (ID 1): {round(result['salaries'][1], 2)} —Ä—É–±.\n"
    summary += f"ü§ñ –ê–≤—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä (ID 3): {round(result['salaries'][3], 2)} —Ä—É–±.\n\n"
    summary += f"üìà –ò—Ç–æ–≥–æ: {round(result['salaries'][1] + result['salaries'][3], 2)} —Ä—É–±.\n"
    summary += f"üë• –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: {result['students_processed']}\n"
    
    return summary
